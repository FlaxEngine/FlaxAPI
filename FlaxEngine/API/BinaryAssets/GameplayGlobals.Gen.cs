// Copyright (c) 2012-2020 Wojciech Figat. All rights reserved.
// This code was generated by a tool. Changes to this file may cause
// incorrect behavior and will be lost if the code is regenerated.

using System;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace FlaxEngine
{
    /// <summary>
    /// The global gameplay variables container asset that can be accessed across whole project.
    /// </summary>
    public sealed partial class GameplayGlobals : BinaryAsset
    {
        /// <summary>
        /// Creates new <see cref="GameplayGlobals"/> object.
        /// </summary>
        private GameplayGlobals() : base()
        {
        }

        /// <summary>
        /// Gets or sets the values collection of gameplay global variables (identified by the name).
        /// </summary>
        [UnmanagedCall]
        public System.Collections.Generic.Dictionary<string, object> Values
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetValues(unmanagedPtr); }
            set { Internal_SetValues(unmanagedPtr, value); }
#endif
        }

        /// <summary>
        /// Gets or sets the default values collection of gameplay global variables (identified by the name).
        /// </summary>
        [UnmanagedCall]
        public System.Collections.Generic.Dictionary<string, object> DefaultValues
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetDefaultValues(unmanagedPtr); }
            set { Internal_SetDefaultValues(unmanagedPtr, value); }
#endif
        }

        /// <summary>
        /// Gets the value of the global variable (it must be added first).
        /// </summary>
        /// <param name="name">The variable name.</param>
        /// <returns>The value</returns>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public object GetValue(string name)
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            return Internal_GetValue(unmanagedPtr, name);
#endif
        }

        /// <summary>
        /// Sets the value of the global variable (it must be added first).
        /// </summary>
        /// <param name="name">The variable name.</param>
        /// <param name="value">The value</param>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public void SetValue(string name, object value)
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            Internal_SetValue(unmanagedPtr, name, value);
#endif
        }

        /// <summary>
        /// Resets the variables values to default values.
        /// </summary>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public void ResetValues()
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            Internal_ResetValues(unmanagedPtr);
#endif
        }

        /// <summary>
        /// Saves asset to the file. Supported only in Editor.
        /// </summary>
        /// <param name="path">The custom asset path to use for the saving. Use empty value to save this asset to its own storage location. Can be used to duplicate asset. Must be specified when saving virtual asset.</param>
        /// <returns>True if cannot save data, otherwise false.</returns>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public bool Save(string path = null)
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            return Internal_Save(unmanagedPtr, path);
#endif
        }

        #region Internal Calls

#if !UNIT_TEST_COMPILANT
        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern System.Collections.Generic.Dictionary<string, object> Internal_GetValues(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetValues(IntPtr obj, System.Collections.Generic.Dictionary<string, object> val);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern System.Collections.Generic.Dictionary<string, object> Internal_GetDefaultValues(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetDefaultValues(IntPtr obj, System.Collections.Generic.Dictionary<string, object> val);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern object Internal_GetValue(IntPtr obj, string name);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetValue(IntPtr obj, string name, object value);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_ResetValues(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern bool Internal_Save(IntPtr obj, string path);
#endif

        #endregion
    }
}
