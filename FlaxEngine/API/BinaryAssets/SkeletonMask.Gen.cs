// Copyright (c) 2012-2020 Wojciech Figat. All rights reserved.
// This code was generated by a tool. Changes to this file may cause
// incorrect behavior and will be lost if the code is regenerated.

using System;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace FlaxEngine
{
    /// <summary>
    /// The skinned model skeleton bones boolean masking data.
    /// </summary>
    public sealed partial class SkeletonMask : BinaryAsset
    {
        /// <summary>
        /// Creates new <see cref="SkeletonMask"/> object.
        /// </summary>
        private SkeletonMask() : base()
        {
        }

        /// <summary>
        /// Gets or sets the skinned model asset used for the skeleton mask reference.
        /// </summary>
        [UnmanagedCall]
        public SkinnedModel Skeleton
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetSkeleton(unmanagedPtr); }
            set { Internal_SetSkeleton(unmanagedPtr, FlaxEngine.Object.GetUnmanagedPtr(value)); }
#endif
        }

        /// <summary>
        /// Gets or sets the per-skeleton node mask (by name).
        /// </summary>
        [UnmanagedCall]
        public string[] MaskedNodes
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetMaskedNodes(unmanagedPtr); }
            set { Internal_SetMaskedNodes(unmanagedPtr, value); }
#endif
        }

        /// <summary>
        /// Gets the skeleton nodes masking array (matches the skeleton nodes list).
        /// </summary>
        /// <param name="buffer">The mask buffer that can be used to reuse the allocation. Method will allocate a new one if the provided is invalid or null.</param>
        /// <returns>The mask array or null if empty.</returns>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public bool[] GetNodesMask(bool[] buffer = null)
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            return Internal_GetNodesMask(unmanagedPtr, buffer);
#endif
        }

        /// <summary>
        /// Saves asset to the file. Supported only in Editor.
        /// </summary>
        /// <param name="path">The custom asset path to use for the saving. Use empty value to save this asset to its own storage location. Can be used to duplicate asset. Must be specified when saving virtual asset.</param>
        /// <returns>True if cannot save data, otherwise false.</returns>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public bool Save(string path = null)
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            return Internal_Save(unmanagedPtr, path);
#endif
        }

        #region Internal Calls

#if !UNIT_TEST_COMPILANT
        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern SkinnedModel Internal_GetSkeleton(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetSkeleton(IntPtr obj, IntPtr val);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern string[] Internal_GetMaskedNodes(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetMaskedNodes(IntPtr obj, string[] val);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern bool[] Internal_GetNodesMask(IntPtr obj, bool[] buffer);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern bool Internal_Save(IntPtr obj, string path);
#endif

        #endregion
    }
}
