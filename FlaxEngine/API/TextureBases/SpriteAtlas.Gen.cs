// Copyright (c) 2012-2019 Wojciech Figat. All rights reserved.
// This code was generated by a tool. Changes to this file may cause
// incorrect behavior and will be lost if the code is regenerated.

using System;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace FlaxEngine
{
    /// <summary>
    /// Sprite atlas texture made of collection of sprites.
    /// </summary>
    public partial class SpriteAtlas : TextureBase
    {
        /// <summary>
        /// Creates new <see cref="SpriteAtlas"/> object.
        /// </summary>
        private SpriteAtlas() : base()
        {
        }

        /// <summary>
        /// Gets the sprite by name.
        /// </summary>
        /// <param name="name">The sprite name.</param>
        /// <returns>Sprite handle (may be invalid if cannot find it).</returns>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public Sprite GetSprite(string name)
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            Sprite resultAsRef;
            Internal_GetSprite(unmanagedPtr, name, out resultAsRef);
            return resultAsRef;
#endif
        }

        /// <summary>
        /// Gets the total amount of sprites in the atlas.
        /// </summary>
        [UnmanagedCall]
        public int SpritesCount
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetSpritesCount(unmanagedPtr); }
#endif
        }

        /// <summary>
        /// Saves the sprites to the asset.
        /// </summary>
        /// <returns>True if failed, otherwise false.</returns>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public bool Save()
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            return Internal_Save(unmanagedPtr);
#endif
        }

        /// <summary>
        /// Adds a new sprite to the atlas.
        /// </summary>
        /// <returns>The created sprite.</returns>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public Sprite AddSprite()
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            Sprite resultAsRef;
            Internal_AddSprite(unmanagedPtr, out resultAsRef);
            return resultAsRef;
#endif
        }

        /// <summary>
        /// Removes new sprite from the atlas.
        /// </summary>
        /// <param name="index">The index of the sprite to remove.</param>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public void RemoveSprite(int index)
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            Internal_RemoveSprite(unmanagedPtr, index);
#endif
        }

        #region Internal Calls

#if !UNIT_TEST_COMPILANT
        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_GetSprite(IntPtr obj, string name, out Sprite resultAsRef);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern int Internal_GetSpritesCount(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern bool Internal_Save(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_AddSprite(IntPtr obj, out Sprite resultAsRef);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_RemoveSprite(IntPtr obj, int index);
#endif

        #endregion
    }
}
