// Copyright (c) 2012-2020 Wojciech Figat. All rights reserved.
// This code was generated by a tool. Changes to this file may cause
// incorrect behavior and will be lost if the code is regenerated.

using System;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace FlaxEngine
{
    /// <summary>
    /// Allows to perform custom rendering using graphics pipeline.
    /// </summary>
    public partial class RenderTask : Object
    {
        /// <summary>
        /// Creates new <see cref="RenderTask"/> object.
        /// </summary>
        protected RenderTask() : base()
        {
        }

        /// <summary>
        /// Gets or sets a value indicating whether task is enabled.
        /// </summary>
        [UnmanagedCall]
        public bool Enabled
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetEnabled(unmanagedPtr); }
            set { Internal_SetEnabled(unmanagedPtr, value); }
#endif
        }

        /// <summary>
        /// Gets or sets task order. Tasks with lower order are rendered first.
        /// </summary>
        [UnmanagedCall]
        public int Order
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetOrder(unmanagedPtr); }
            set { Internal_SetOrder(unmanagedPtr, value); }
#endif
        }

        /// <summary>
        /// Marks the next rendered frame as camera cut. Used to clear the temporal effects history and prevent visual artifacts blended from the previous frames.
        /// </summary>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public void CameraCut()
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            Internal_CameraCut(unmanagedPtr);
#endif
        }

        #region Internal Calls

#if !UNIT_TEST_COMPILANT
        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern bool Internal_GetEnabled(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetEnabled(IntPtr obj, bool val);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern int Internal_GetOrder(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetOrder(IntPtr obj, int val);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_CameraCut(IntPtr obj);
#endif

        #endregion
    }
}
