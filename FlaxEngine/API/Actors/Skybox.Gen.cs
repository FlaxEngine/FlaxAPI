// Copyright (c) 2012-2020 Wojciech Figat. All rights reserved.
// This code was generated by a tool. Changes to this file may cause
// incorrect behavior and will be lost if the code is regenerated.

using System;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace FlaxEngine
{
    /// <summary>
    /// Skybox actor renders sky using custom cube texture or material
    /// </summary>
    [Serializable]
    public sealed partial class Skybox : Actor
    {
        /// <summary>
        /// Creates new <see cref="Skybox"/> object.
        /// </summary>
        private Skybox() : base()
        {
        }

        /// <summary>
        /// Creates new instance of <see cref="Skybox"/> object.
        /// </summary>
        /// <returns>Created object.</returns>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public static Skybox New()
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            return Internal_Create(typeof(Skybox)) as Skybox;
#endif
        }

        /// <summary>
        /// Gets or sets skybox cube texture.
        /// </summary>
        [UnmanagedCall]
        [EditorOrder(10), DefaultValue(null), EditorDisplay("Skybox"), Tooltip("Skybox cube texture")]
        public CubeTexture CubeTexture
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetCubeTexture(unmanagedPtr); }
            set { Internal_SetCubeTexture(unmanagedPtr, FlaxEngine.Object.GetUnmanagedPtr(value)); }
#endif
        }

        /// <summary>
        /// Gets or sets skybox custom material used to override default.
        /// </summary>
        [UnmanagedCall]
        [EditorOrder(20), DefaultValue(null), EditorDisplay("Skybox"), Tooltip("Skybox custom material used to override default")]
        public MaterialBase CustomMaterial
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetCustomMaterial(unmanagedPtr); }
            set { Internal_SetCustomMaterial(unmanagedPtr, FlaxEngine.Object.GetUnmanagedPtr(value)); }
#endif
        }

        /// <summary>
        /// Gets or sets skybox color.
        /// </summary>
        [UnmanagedCall]
        [EditorOrder(30), DefaultValue(typeof(Color), "1,1,1,1"), EditorDisplay("Skybox"), Tooltip("Skybox color")]
        public Color Color
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { Color resultAsRef; Internal_GetColor(unmanagedPtr, out resultAsRef); return resultAsRef; }
            set { Internal_SetColor(unmanagedPtr, ref value); }
#endif
        }

        #region Internal Calls

#if !UNIT_TEST_COMPILANT
        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern CubeTexture Internal_GetCubeTexture(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetCubeTexture(IntPtr obj, IntPtr val);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern MaterialBase Internal_GetCustomMaterial(IntPtr obj);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetCustomMaterial(IntPtr obj, IntPtr val);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_GetColor(IntPtr obj, out Color resultAsRef);

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern void Internal_SetColor(IntPtr obj, ref Color val);
#endif

        #endregion
    }
}
